name: fetch-images

on:
  schedule:
    - cron: "0 */6 * * *"   # 6시간마다(UTC 기준) 실행
  workflow_dispatch: {}      # 수동 실행도 허용

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare folders
        run: |
          mkdir -p images
          test -f images/catalog.json || echo '{"files":[]}' > images/catalog.json

      - name: Download 4 images with custom names
        shell: bash
        run: |
          # 아카이빙 대상 PNG 4개
          URLS=(
            "https://backend.wplace.live/files/s0/tiles/1741/791.png"
            "https://backend.wplace.live/files/s0/tiles/1742/791.png"
            "https://backend.wplace.live/files/s0/tiles/1741/790.png"
            "https://backend.wplace.live/files/s0/tiles/1742/790.png"
          )

          ts="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          DAY="$(date -u +'%Y%m%d')"
          TIM="$(date -u +'%H%M%S')"
          tmpdir="$(mktemp -d)"

          for u in "${URLS[@]}"; do
            # URL 패턴: .../tiles/{A}/{B}.png 에서 A와 B 추출
            A="$(echo "$u" | awk -F'/tiles/|/' '{print $3}')"
            B="$(basename "$u" .png)"
            name="${A}x${B}_${DAY}_${TIM}.png"

            # 조건부 요청(서버가 지원하면 변경 있을 때만 200)
            ims=""
            if [ -f images/latest.txt ]; then
              ims="$(date -u -r images/latest.txt +'%a, %d %b %Y %H:%M:%S GMT' 2>/dev/null || true)"
            fi

            curl -L --fail --silent --show-error \
                 ${ims:+-H "If-Modified-Since: $ims"} \
                 -o "${tmpdir}/${name}" "$u" || true

            if [ -s "${tmpdir}/${name}" ]; then
              mv "${tmpdir}/${name}" "images/${name}"
              echo "$ts" > images/latest.txt
              echo "Saved ${name}"
            else
              echo "No update for $u"
            fi
          done

      - name: Update catalog.json
        shell: bash
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');
          const crypto = require('crypto');

          const dir = 'images';
          const catalogPath = path.join(dir, 'catalog.json');

          let catalog = { files: [] };
          if (fs.existsSync(catalogPath)) {
            try { catalog = JSON.parse(fs.readFileSync(catalogPath, 'utf8') || '{"files":[]}'); }
            catch { catalog = { files: [] }; }
          }

          const files = fs.readdirSync(dir).filter(f => /\.(png|jpg|jpeg|gif|webp)$/i.test(f));
          const known = new Set(catalog.files.map(x => x.name));

          for (const f of files) {
            if (!known.has(f)) {
              const p = path.join(dir, f);
              const sha = crypto.createHash('md5').update(fs.readFileSync(p)).digest('hex').slice(0,12);
              catalog.files.push({ name: f, sha, ts: new Date().toISOString() });
            }
          }

          // 최근 2000개 메타만 유지(원하는 값으로 조정 가능)
          catalog.files = catalog.files.sort((a,b)=>a.name.localeCompare(b.name)).slice(-2000);
          fs.writeFileSync(catalogPath, JSON.stringify(catalog, null, 2));
          console.log('files in catalog:', catalog.files.length);
          NODE

      - name: Commit and push if changed
        run: |
          git config user.email "actions@users.noreply.github.com"
          git config user.name "github-actions"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore: fetch images [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
